## Aufgabe 5

### Gruppenfunktion über alle Dimensionen mit CUBE
````sql
SELECT PRODUCTION_YEAR, WHEAT, BARLEY, GRAIN_CORN_INCLUDING_CCM, POTATOES, SUGARBEET, RAPESEED_AND_TURNIPS, SOYBEANS, COUNTRY FROM CROPPRODUCTION
    GROUP BY  CUBE(PRODUCTION_YEAR, WHEAT, BARLEY, GRAIN_CORN_INCLUDING_CCM, POTATOES, SUGARBEET, RAPESEED_AND_TURNIPS, SOYBEANS, COUNTRY)
    ORDER BY PRODUCTION_YEAR;
````
### ein Ranking
````sql
SELECT
    PRODUCTION_YEAR,
    -- The Rank Type what the user Wants
    --Example POTATOES
    POTATOES AS POTATOES_AMOUNT, RANK() OVER (ORDER BY POTATOES DESC) AS POTATOES_RANK
FROM
    CROPPRODUCTION;

    -- RANK TYPES

    --WHEAT
    WHEAT AS WHEAT_AMOUNT, RANK() OVER (ORDER BY WHEAT DESC) AS WHEAT_RANK

    --BARLEY
    BARLEY AS BARLEY_AMOUNT, RANK() OVER (ORDER BY BARLEY DESC) AS BARLEY_RANK

    --GRAIN_CORN_INCLUDING_CCM
    GRAIN_CORN_INCLUDING_CCM AS GRAIN_CORN_AMOUNT, RANK() OVER (ORDER BY GRAIN_CORN_INCLUDING_CCM DESC) AS GRAIN_CORN_RANK

    --POTATOES
    POTATOES AS POTATOES_AMOUNT, RANK() OVER (ORDER BY POTATOES DESC) AS POTATOES_RANK

    --SUGARBEET
    SUGARBEET AS SUGARBEET_AMOUNT, RANK() OVER (ORDER BY SUGARBEET DESC) AS SUGARBEET_RANK

    --RAPESEED_AND_TURNIPS
    RAPESEED_AND_TURNIPS AS RAPESEED_AND_TURNIPS_AMOUNT, RANK() OVER (ORDER BY RAPESEED_AND_TURNIPS DESC) AS RAPESEED_AND_TURNIPS_RANK

    --SOYBEANS
    SOYBEANS AS SOYBEANS_AMOUNT, RANK() OVER (ORDER BY SOYBEANS DESC) AS SOYBEANS_RANK
````
### Pivot Auswertungen
#### alle Paare der Dimensionen
````sql
SELECT *
FROM(
    SELECT PRODUCTION_YEAR, WHEAT, BARLEY, GRAIN_CORN_INCLUDING_CCM, POTATOES, SUGARBEET, RAPESEED_AND_TURNIPS, SOYBEANS FROM CROPPRODUCTION
    WHERE PRODUCTION_YEAR IN (2010, 2011, 2012, 2013, 2014, 2015, 2016)
    )
    PIVOT (
        SUM(WHEAT) AS WHEAT, SUM(BARLEY) AS BARLEY, SUM(GRAIN_CORN_INCLUDING_CCM) AS GRAIN_CORN_INCLUDING_CCM, SUM(POTATOES) AS POTATOES, SUM(SUGARBEET) AS SUGARBEET, SUM(RAPESEED_AND_TURNIPS) AS RAPESEED_AND_TURNIPS, SUM(SOYBEANS) AS SOYBEANS
        FOR PRODUCTION_YEAR IN (2010, 2011, 2012, 2013, 2014, 2015, 2016));
````
#### alle Gruppen -> ein Pivotstatement -  Spalten: Jahre / Zeilen: aussagekräftige Dimension
````sql
SELECT *
    FROM (SELECT PRODUCTION_YEAR, WHEAT, SOYBEANS, RAPESEED_AND_TURNIPS, SUGARBEET, POTATOES, GRAIN_CORN_INCLUDING_CCM, BARLEY, COUNTRY FROM CROPPRODUCTION
            WHERE COUNTRY = 'Österreich' AND PRODUCTION_YEAR IN (2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019))
        PIVOT (
            MAX(BARLEY) AS BARLEY, MAX(SUGARBEET) AS SUGARBEET, MAX(POTATOES) AS POTATOES
            FOR COUNTRY IN ('Österreich' AS AUSTRIA)
       )
````